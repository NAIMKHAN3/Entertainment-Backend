// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String
  password     String
  role         UserRole       @default(User)
  contactNo    String
  address      String
  profileImg   String         @default("https://res.cloudinary.com/droyjiqwf/image/upload/v1696801827/download_d6s8bi.jpg")
  cenemaRating CenemaRating[]
  blogComment Comment[]
  cart Cart[]
  booking Booking[]
}

enum UserRole {
  Admin
  SuperAdmin
  User
}

model CenemaCategory {
  id     String   @id @default(uuid())
  name   String
  cenema Cenema[]
}

model Cenema {
  id                String         @id @default(uuid())
  name              String
  categoryId        String
  producerName      String
  productionManager String
  image             String
  realeaseDate      String
  price             String
  description       String
  category          CenemaCategory @relation(fields: [categoryId], references: [id])
  rating            CenemaRating[]
  cart Cart[]
  cenema Booking[]
}

model CenemaRating {
  id       String @id @default(uuid())
  userId   String
  cenemaId String
  rating   Float
  comment  String?
  user     User   @relation(fields: [userId], references: [id])
  cenema   Cenema @relation(fields: [cenemaId], references: [id])
}


model Blog {
  id String @id @default(uuid())
  image String
  title String
  description String
  like Int @default(0)
  comment Comment[]
}

model Comment {
  id String @id @default(uuid())
  userId String
  blogId String
  comment String
  blog Blog @relation(fields: [blogId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Like {
  id String @id @default(uuid())
  blogId String
  userId String
}

model FAQ {
  id String @id @default(uuid())
  ques String
  ans String
}

model Cart {
  id String @id @default(uuid())
  userId String
  cenemaId String
  user User @relation(fields: [userId], references: [id])
  cenema Cenema @relation(fields: [cenemaId],references: [id])
}

model Booking {
  id String @id @default(uuid())
  userId String
  cenemaId String
  bookingDate String
  slot String
  person String
  status Status @default(Pending)
  paymentStatus Boolean @default(false)
  user User @relation(fields: [userId], references: [id])
  cenema Cenema @relation(fields: [cenemaId], references: [id])
}

enum Status {
  Pending
  Accepted
  Rejected
}



